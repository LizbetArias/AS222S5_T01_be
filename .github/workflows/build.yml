name: CI/CD Pipeline

on:
  push:
    branches:
      - develop
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build, Analyze, and Deploy
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.sonar/cache
            ~/.m2
          key: ${{ runner.os }}-cache-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-cache

      - name: Build and analyze with SonarCloud
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
        run: |
          mvn -B verify \
            -Dsonar.projectKey=LizbetArias_AS222S5_T01_be \
            -Dspring.datasource.url=${{ secrets.DATABASE_URL }} \
            -Dspring.datasource.username=${{ secrets.DATABASE_USERNAME }} \
            -Dspring.datasource.password=${{ secrets.DATABASE_PASSWORD }} \
            org.sonarsource.scanner.maven:sonar-maven-plugin:sonar

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          docker build --file Dockerfile --tag lizbet/chatiris:${{ github.sha }} .
          docker tag lizbet/chatiris:${{ github.sha }} lizbet/chatiris:latest
          docker push lizbet/chatiris:${{ github.sha }}
          docker push lizbet/chatiris:latest
#miau
